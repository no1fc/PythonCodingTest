"""
문제 짝지어 제거하기

문제 설명
짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다.
먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다.
그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다.
이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다.
문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요.
성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.

예를 들어, 문자열 S = baabaa 라면

b aa baa → bb aa → aa →

의 순서로 문자열을 모두 제거할 수 있으므로 1을 반환합니다.

제한사항
문자열의 길이 : 1,000,000이하의 자연수
문자열은 모두 소문자로 이루어져 있습니다.
입출력 예
s	result
baabaa	1
cdcd	0
입출력 예 설명
입출력 예 #1
위의 예시와 같습니다.
입출력 예 #2
문자열이 남아있지만 짝지어 제거할 수 있는 문자열이 더 이상 존재하지 않기 때문에 0을 반환합니다.
"""

def solution(s):
    # 소문자로 이루어진 문자를 받습니다.
    # 해당 문자의 첫 글자를 배열에 담아주고
    # 문자열에 값을 모두 확인할때까지 반복합니다.
    # 반복중 이전 배열에 값이 현재 값과 같다면 배열값을 제거합니다.
    # 만약 다르다면 배열에 추가해줍니다.
    arr = []
    for i in s:
        # 반복할때 배열에 값을 추가해줍니다.
        arr.append(i)
        # while 문을 추가하여
        # 배열내의 -1,-2 값들이 같다면 두번 제거합니다.
        while len(arr) > 1 and arr[-1] == arr[-2]:
            arr.pop()
            arr.pop()
    print(arr)
    return 1 if len(arr) == 0 else 0

print(solution("baabaa"))
print(solution("cdcd"))